{"version":3,"sources":["components/PageContainer.js","pages/HomePage.js","hooks/UseButtonClick.js","components/buttons/NeoMorphicButton.js","pages/ButtonPage.js","components/cards/CardOne.js","components/cards/GlassCard.js","components/cards/EventCard.js","hooks/UseClickOutside.js","components/ModalForm.js","components/cards/CardContainer.js","pages/CardsPage.js","components/calendar/MonthTable.js","components/calendar/YearTable.js","components/calendar/CalendarSettings.js","components/calendar/CalendarNavigation.js","pages/CalendarPage.js","components/AnimationApp.js","components/SideNavigation.js","styles/GlobalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["Page","styled","div","props","background","PageContainer","children","HomePage","useButtonClick","initialValue","useState","Button","button","color","NeoMorphicButton","isClicked","setIsClicked","onClick","ButtonPage","Card","GlassCard","number","heading","text","link","className","href","EventCard","event","day","month","location","category","useOutsideClick","ref","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","Modal","ModalForm","useRef","closeModal","showModal","CSSTransition","in","timeout","classNames","type","placeholder","Container","color1","color2","SVGContainer","CardContainer","svg","console","log","CardsPage","setShowModal","Calendar","MonthTable","allMonths","setMonth","months","map","data","monthNo","moment","format","push","rows","cells","forEach","row","i","monthlist","d","colSpan","YearTable","setYear","currentYear","years","startDate","stopDate","dateArray","currentDate","add","getDates","set","yearlist","Settings","CalendarSettings","monthHeading","changeViewMode","toggleMonthPicker","toggleYearPicker","icon","faBars","Navigation","CalendarNavigation","nextMonth","prevMonth","faArrowLeft","faArrowRight","DoubleCalendar","CalendarPage","weekdayShort","weekdaysShort","dateObject","setDateObject","monthsShort","showYearPicker","setShowYearPicker","showMonthPicker","setShowMonthPicker","currentMonth","parseInt","firstDay","startOf","setCurrentYear","currentDay","viewMode","setViewMode","blanks","daysInMonth","today","totalSlots","length","setCurrentMonth","date","Object","assign","mode","thisMonth","getMonthHeading","year","AnimationStyles","AnimationApp","useLocation","TransitionGroup","path","key","Header","header","Nav","nav","SideNavigation","expandNav","setExpandNav","closeNav","unmountOnExit","activeClassName","exact","to","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d65308b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PageContainer = (props) => {\r\n    return (\r\n        <Page background={props.background}>\r\n            {props.children}\r\n        </Page>\r\n    )\r\n}\r\n\r\nconst Page = styled.div`\r\n   height: calc(100vh - 100px);\r\n    background-color: ${props => props.background};\r\n    color: #fff;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 2rem;\r\n    bottom: 0;\r\n`;\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport PageContainer from '../components/PageContainer';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <PageContainer background=\"green\">\r\n            <h1>Home!</h1>\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","import { useState } from 'react';\r\n\r\nfunction useButtonClick(initialValue) {\r\n    const [value, setValue] = useState(initialValue);\r\n    return [value, setValue];\r\n}\r\n\r\nexport default useButtonClick;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useButtonClick from '../../hooks/UseButtonClick';\r\n\r\nconst NeoMorphicButton = (props) => {\r\n    const [ isClicked, setIsClicked ] = useButtonClick(false)\r\n    const { color } = props;\r\n    return (\r\n        <Button onClick={() => setIsClicked(!isClicked)} color={color}>{isClicked ? \"You Clicked Me\" : \"Click Me!\"}</Button>\r\n    )\r\n}\r\n\r\nconst Button = styled.button`\r\n    background-color: ${props => props.color};\r\n    border-radius: 10px;\r\n    padding: 0.5rem 1rem;\r\n    max-width: 150px;\r\n    min-width: 125px;\r\n    border: none;\r\n    outline: none;\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.9);\r\n    \r\n\r\n`;\r\n\r\nexport default NeoMorphicButton;\r\n","import React from 'react';\r\nimport NeoMorphicButton from '../components/buttons/NeoMorphicButton';\r\nimport PageContainer from '../components/PageContainer';\r\n\r\nconst ButtonPage = () => {\r\n    return (\r\n        <PageContainer background=\"white\">\r\n            <h1>Buttons!</h1>\r\n            <NeoMorphicButton color=\"white\"></NeoMorphicButton>\r\n            <NeoMorphicButton color=\"light gray\"></NeoMorphicButton>\r\n            <NeoMorphicButton color=\"gray\"></NeoMorphicButton>\r\n            <NeoMorphicButton color=\"black\"></NeoMorphicButton>\r\n\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default ButtonPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardOne = (props) => {\r\n    const { heading, subtitle, text, image } = props;\r\n    return (\r\n        <Card>\r\n            <h1>{heading}</h1>\r\n            <small>{subtitle}</small>\r\n            <p>{text}</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Card = styled.div`\r\n    border: solid black 1px;\r\n    width: 300px;\r\n    height: 300px;\r\n    padding: 1rem;\r\n    text-align: center;\r\n    color: black;\r\n    background-color: white;\r\n    border-radius: 1rem;\r\n`;\r\n\r\nexport default CardOne;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GlassCard = (props) => {\r\n    const { number, heading, text, link=\"#\" } = props;\r\n    return (\r\n            <Card>\r\n                <div className=\"content\">\r\n                    <h2>{number}</h2>\r\n                    <h3>{heading}</h3>\r\n                    <p>{text}</p>\r\n                    <a href={link}>Read More</a>\r\n                </div>\r\n            </Card>\r\n    )\r\n}\r\n\r\nconst Card = styled.div`\r\n    position: relative;\r\n    width: 260px;\r\n    height: 350px;\r\n    box-shadow: 30px 20px 50px rgba(0,0,0,0.5);\r\n    border-radius: 15px;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    overflow: hidden;\r\n    display: flex;\r\n    margin: 15px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-left: 1px solid rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(4px);\r\n    color: black;\r\n    font-family: 'Poppins', sans-serif;\r\n    &:hover .content {\r\n        transform: translateY(0px);\r\n        opacity: 1;\r\n        h2 {\r\n            color: rgba(255, 255, 255, 0.2);\r\n        }\r\n\r\n    }\r\n    .content {\r\n        padding: 20px;\r\n        text-align: center;\r\n        transition: 200ms ease-in;\r\n        transform: translateY(3px);\r\n        opacity: 0.7;\r\n        backdrop-filter: blur(1px);\r\n\r\n        h2 {\r\n            position: absolute;\r\n            top: -40px;\r\n            right: 30px;\r\n            font-size: 8em;\r\n            color: rgba(255, 255, 255, 0.1);\r\n            transition: 200ms ease-in;\r\n\r\n        }\r\n        h3 {\r\n            font-size: 1.8em;\r\n            color: #fff;\r\n            z-index: 1;\r\n            padding-bottom: 1rem;\r\n        }\r\n        p {\r\n            font-size: 1em;\r\n            color: #fff;\r\n            font-weight: 200;\r\n            line-height: 1.1rem;\r\n            text-align: justify;\r\n        }\r\n        a {\r\n            position: relative;\r\n            display: inline-block;\r\n            padding: 8px 20px;\r\n            margin-top: 15px;\r\n            background: #fff;\r\n            color: #000;\r\n            border-radius: 20px;\r\n            text-decoration: none;\r\n            font-weight: 500;\r\n            box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n\r\n        }\r\n    }\r\n\r\n\r\n`;\r\n\r\nexport default GlassCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst EventCard = (props) => {\r\n    const { event, day, month, location, category } = props;\r\n    return (\r\n        <Card>\r\n            <div className=\"content\">\r\n                <div className=\"date\">\r\n                    <h2>{day}</h2>\r\n                    <h3>{month}</h3>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <p className=\"event\">{event}</p>\r\n                    <p className=\"location\">{location}</p>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Card = styled.div`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    height: 100px;\r\n    font-family: 'Poppins', sans-serif;\r\n    .content {\r\n        border-radius: 10px;\r\n        overflow: hidden;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .date {\r\n            width: 150px;\r\n            height: 100px;\r\n            background-color: blue;\r\n            color: #fff;\r\n            padding: 1rem;\r\n            h2 {\r\n                font-size: 2.5rem;\r\n                font-weight: 200;\r\n                text-align: center;\r\n                letter-spacing: 0.25rem;\r\n                margin-left: 0.5rem;\r\n            }\r\n            h3 {\r\n                text-align: center;\r\n                font-size: 1.4rem;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n        }\r\n        .body {\r\n            width: 350px;\r\n            height: 100px;\r\n            padding: 1rem;\r\n            background-color: rgba(255,255,255,0.2);\r\n            backdrop-filter: blur(5px);\r\n            justify-content: center;\r\n            display: flex;\r\n            flex-direction: column;\r\n            .event {\r\n                font-size: 1.5rem;\r\n                font-weight: 300;\r\n                line-height: 2rem;\r\n                margin-bottom: 0.2rem;\r\n            }\r\n            .location {\r\n                font-weight: 200;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default EventCard;\r\n","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;","import React, { useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\nimport useOutsideClick from '../hooks/UseClickOutside';\r\n\r\nconst duration = 1000;\r\n\r\nconst defaultStyle = {\r\n  transition: `opacity ${duration}ms ease-in-out`,\r\n  opacity: 0,\r\n}\r\n\r\nconst transitionStyles = {\r\n  entering: { opacity: 1 },\r\n  entered:  { opacity: 1 },\r\n  exiting:  { opacity: 0 },\r\n  exited:  { opacity: 0 },\r\n};\r\n\r\nconst ModalForm = (props) => {\r\n    const ref = useRef();\r\n    const { closeModal, showModal } = props;\r\n    useOutsideClick(ref, () => {\r\n        closeModal();\r\n    });\r\n    return (\r\n        <CSSTransition in={showModal} timeout={duration} classNames=\"transition\">\r\n            <Modal ref={ref}>\r\n                <button onClick={() => closeModal()}>X</button>\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"Add a heading\" />\r\n                </form>\r\n            </Modal>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nconst Modal = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    right: 50%;\r\n    bottom: 50%;\r\n    transform: translate(-50%, -50%);\r\n    height: 500px;\r\n    width: 500px;\r\n    background-color: white;\r\n    border: black 1px solid;\r\n    border-radius: 2rem;\r\n    z-index: 100;\r\n    .transition-enter {\r\n        opacity: 0;\r\n    }\r\n    .transition-enter-active {\r\n        opacity: 0.5;\r\n        transition: opacity 300ms;\r\n    }\r\n    .transition-enter-done {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport default ModalForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardContainer = (props) => {\r\n    const [ color1, color2=color1 ] = props.background;\r\n    const { svg } = props;\r\n    console.log(svg)\r\n    return (\r\n        <>\r\n            {svg ? <SVGContainer>{props.children}</SVGContainer> : <Container color1={color1} color2={color2}>{props.children}</Container>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    flex-wrap: wrap;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1;\r\n    background: linear-gradient(${props => props.color1}, ${props => props.color2});\r\n`;\r\n\r\nconst SVGContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    flex-wrap: wrap;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1;\r\n    background-color: #00b7ff;\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='540' height='450' viewBox='0 0 1080 900'%3E%3Cg fill-opacity='.1'%3E%3Cpolygon fill='%23444' points='90 150 0 300 180 300'/%3E%3Cpolygon points='90 150 180 0 0 0'/%3E%3Cpolygon fill='%23AAA' points='270 150 360 0 180 0'/%3E%3Cpolygon fill='%23DDD' points='450 150 360 300 540 300'/%3E%3Cpolygon fill='%23999' points='450 150 540 0 360 0'/%3E%3Cpolygon points='630 150 540 300 720 300'/%3E%3Cpolygon fill='%23DDD' points='630 150 720 0 540 0'/%3E%3Cpolygon fill='%23444' points='810 150 720 300 900 300'/%3E%3Cpolygon fill='%23FFF' points='810 150 900 0 720 0'/%3E%3Cpolygon fill='%23DDD' points='990 150 900 300 1080 300'/%3E%3Cpolygon fill='%23444' points='990 150 1080 0 900 0'/%3E%3Cpolygon fill='%23DDD' points='90 450 0 600 180 600'/%3E%3Cpolygon points='90 450 180 300 0 300'/%3E%3Cpolygon fill='%23666' points='270 450 180 600 360 600'/%3E%3Cpolygon fill='%23AAA' points='270 450 360 300 180 300'/%3E%3Cpolygon fill='%23DDD' points='450 450 360 600 540 600'/%3E%3Cpolygon fill='%23999' points='450 450 540 300 360 300'/%3E%3Cpolygon fill='%23999' points='630 450 540 600 720 600'/%3E%3Cpolygon fill='%23FFF' points='630 450 720 300 540 300'/%3E%3Cpolygon points='810 450 720 600 900 600'/%3E%3Cpolygon fill='%23DDD' points='810 450 900 300 720 300'/%3E%3Cpolygon fill='%23AAA' points='990 450 900 600 1080 600'/%3E%3Cpolygon fill='%23444' points='990 450 1080 300 900 300'/%3E%3Cpolygon fill='%23222' points='90 750 0 900 180 900'/%3E%3Cpolygon points='270 750 180 900 360 900'/%3E%3Cpolygon fill='%23DDD' points='270 750 360 600 180 600'/%3E%3Cpolygon points='450 750 540 600 360 600'/%3E%3Cpolygon points='630 750 540 900 720 900'/%3E%3Cpolygon fill='%23444' points='630 750 720 600 540 600'/%3E%3Cpolygon fill='%23AAA' points='810 750 720 900 900 900'/%3E%3Cpolygon fill='%23666' points='810 750 900 600 720 600'/%3E%3Cpolygon fill='%23999' points='990 750 900 900 1080 900'/%3E%3Cpolygon fill='%23999' points='180 0 90 150 270 150'/%3E%3Cpolygon fill='%23444' points='360 0 270 150 450 150'/%3E%3Cpolygon fill='%23FFF' points='540 0 450 150 630 150'/%3E%3Cpolygon points='900 0 810 150 990 150'/%3E%3Cpolygon fill='%23222' points='0 300 -90 450 90 450'/%3E%3Cpolygon fill='%23FFF' points='0 300 90 150 -90 150'/%3E%3Cpolygon fill='%23FFF' points='180 300 90 450 270 450'/%3E%3Cpolygon fill='%23666' points='180 300 270 150 90 150'/%3E%3Cpolygon fill='%23222' points='360 300 270 450 450 450'/%3E%3Cpolygon fill='%23FFF' points='360 300 450 150 270 150'/%3E%3Cpolygon fill='%23444' points='540 300 450 450 630 450'/%3E%3Cpolygon fill='%23222' points='540 300 630 150 450 150'/%3E%3Cpolygon fill='%23AAA' points='720 300 630 450 810 450'/%3E%3Cpolygon fill='%23666' points='720 300 810 150 630 150'/%3E%3Cpolygon fill='%23FFF' points='900 300 810 450 990 450'/%3E%3Cpolygon fill='%23999' points='900 300 990 150 810 150'/%3E%3Cpolygon points='0 600 -90 750 90 750'/%3E%3Cpolygon fill='%23666' points='0 600 90 450 -90 450'/%3E%3Cpolygon fill='%23AAA' points='180 600 90 750 270 750'/%3E%3Cpolygon fill='%23444' points='180 600 270 450 90 450'/%3E%3Cpolygon fill='%23444' points='360 600 270 750 450 750'/%3E%3Cpolygon fill='%23999' points='360 600 450 450 270 450'/%3E%3Cpolygon fill='%23666' points='540 600 630 450 450 450'/%3E%3Cpolygon fill='%23222' points='720 600 630 750 810 750'/%3E%3Cpolygon fill='%23FFF' points='900 600 810 750 990 750'/%3E%3Cpolygon fill='%23222' points='900 600 990 450 810 450'/%3E%3Cpolygon fill='%23DDD' points='0 900 90 750 -90 750'/%3E%3Cpolygon fill='%23444' points='180 900 270 750 90 750'/%3E%3Cpolygon fill='%23FFF' points='360 900 450 750 270 750'/%3E%3Cpolygon fill='%23AAA' points='540 900 630 750 450 750'/%3E%3Cpolygon fill='%23FFF' points='720 900 810 750 630 750'/%3E%3Cpolygon fill='%23222' points='900 900 990 750 810 750'/%3E%3Cpolygon fill='%23222' points='1080 300 990 450 1170 450'/%3E%3Cpolygon fill='%23FFF' points='1080 300 1170 150 990 150'/%3E%3Cpolygon points='1080 600 990 750 1170 750'/%3E%3Cpolygon fill='%23666' points='1080 600 1170 450 990 450'/%3E%3Cpolygon fill='%23DDD' points='1080 900 1170 750 990 750'/%3E%3C/g%3E%3C/svg%3E\");\r\n`;\r\n\r\nexport default CardContainer;\r\n","import React, { useState } from 'react';\r\nimport PageContainer from '../components/PageContainer';\r\nimport CardOne from '../components/cards/CardOne';\r\nimport GlassCard from '../components/cards/GlassCard';\r\nimport EventCard from '../components/cards/EventCard';\r\nimport ModalForm from '../components/ModalForm';\r\nimport CardContainer from '../components/cards/CardContainer';\r\n\r\nconst CardsPage = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const closeModal = () => setShowModal(false)\r\n    return (\r\n        <PageContainer background=\"yellow\">\r\n            <h1>Cards</h1>\r\n            <button onClick={() => setShowModal(true)}>Show Modal</button>\r\n            { showModal && <ModalForm closeModal={closeModal} showModal={showModal}/> }\r\n            <CardContainer background={[\"#222f3e\"]} svg={true}>\r\n                <GlassCard heading=\"Card One\" number=\"01\" text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Odio minus cum provident animi laborum dignissimos magni, labore enim nobis magnam iure maxime consequatur deleniti nesciunt! Error debitis laboriosam veniam itaque.\" />\r\n                <GlassCard heading=\"Card Two\" number=\"02\" text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Odio minus cum provident animi laborum dignissimos magni, labore enim nobis magnam iure maxime consequatur deleniti nesciunt! Error debitis laboriosam veniam itaque.\" />\r\n                <GlassCard heading=\"Card Three\" number=\"03\" text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Odio minus cum provident animi laborum dignissimos magni, labore enim nobis magnam iure maxime consequatur deleniti nesciunt! Error debitis laboriosam veniam itaque.\" />\r\n            </CardContainer>\r\n            <CardContainer background={[\"#222f3e\", \"transparent\"]} svg={true} >\r\n                <EventCard event=\"Alex's Birthday Party\" location=\"Auburn, Washington\" day=\"19\" month=\"July\" />\r\n                <EventCard event=\"Alex's Birthday Party\" location=\"Auburn, Washington\" day=\"19\" month=\"July\" />\r\n                <EventCard event=\"Alex's Birthday Party\" location=\"Auburn, Washington\" day=\"19\" month=\"July\" />\r\n            </CardContainer>\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default CardsPage;\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\n\r\nconst MonthTable = (props) => {\r\n    const { allMonths, setMonth } = props;\r\n    let months = [];\r\n    allMonths.map(data => {\r\n        const monthNo = moment().month(data).format(\"M\");\r\n        months.push(\r\n            <td onClick={() => setMonth(monthNo)}><span>{data}</span></td>\r\n        )\r\n    })\r\n    let rows = [];\r\n    let cells = [];\r\n    months.forEach((row, i) => {\r\n        if (i % 3 !== 0 || i == 0) { // except zero index \r\n            cells.push(row); \r\n        } else { \r\n            rows.push(cells); \r\n            cells = [];\r\n            cells.push(row); \r\n        } \r\n    })\r\n    rows.push(cells);\r\n    let monthlist = rows.map((d, i) => {\r\n        return <tr>{d}</tr>\r\n    })\r\n    return (\r\n        <Calendar>\r\n            <table className=\"calendar-month\">\r\n                <thead>\r\n                <tr>\r\n                    <th colSpan=\"4\">Select a Month</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{monthlist}</tbody>\r\n            </table>\r\n        </Calendar>\r\n    )\r\n}\r\n\r\nconst Calendar = styled.div`\r\n    width: 200px;\r\n    margin: 0 auto;\r\n    table {\r\n        width: 100%;\r\n    }\r\n    .calendar-month span{\r\n        padding: 0.25rem;\r\n        transition: 100ms ease-in-out;\r\n        &:hover {\r\n            color: white;\r\n            background-color: darkgray;\r\n            cursor: pointer;\r\n            border-radius: 5px;\r\n        }\r\n    }\r\n`;\r\nexport default MonthTable;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\n\r\nconst YearTable = (props) => {\r\n    const { setYear } = props;\r\n    const currentYear = moment(moment()).format(\"Y\");\r\n    let years = [];\r\n    let nextten = moment().set('year', currentYear).add(11, 'year').format(\"Y\");\r\n    const getDates = (startDate, stopDate) => {\r\n        var dateArray = [];\r\n        var currentDate = moment(startDate);\r\n        var stopDate = moment(stopDate);\r\n        while (currentDate <= stopDate) {\r\n          dateArray.push(moment(currentDate).format(\"YYYY\"));\r\n          currentDate = moment(currentDate).add(1, \"year\");\r\n        }\r\n        return dateArray;\r\n    }\r\n    let twelveyears = getDates(currentYear, nextten);\r\n    twelveyears.map(data => {\r\n        years.push(\r\n          <td\r\n            key={data}\r\n            className=\"calendar-month\"\r\n            onClick={() => {\r\n              setYear(data);\r\n            }}\r\n          >\r\n            <span>{data}</span>\r\n          </td>\r\n        );\r\n      });\r\n      let rows = [];\r\n      let cells = [];\r\n  \r\n      years.forEach((row, i) => {\r\n        if (i % 3 !== 0 || i == 0) {\r\n          cells.push(row);\r\n        } else {\r\n          rows.push(cells);\r\n          cells = [];\r\n          cells.push(row);\r\n        }\r\n      });\r\n      rows.push(cells);\r\n      let yearlist = rows.map((d, i) => {\r\n        return <tr>{d}</tr>;\r\n      });\r\n    return (\r\n        <Calendar>\r\n            <table className=\"calendar-month\">\r\n                <thead>\r\n                <tr>\r\n                    <th colSpan=\"4\">Select a Year</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{yearlist}</tbody>\r\n            </table>\r\n        </Calendar>\r\n    )\r\n}\r\n\r\nconst Calendar = styled.div`\r\n    width: 200px;\r\n    margin: 0 auto;\r\n    table {\r\n        width: 100%;\r\n    }\r\n    .calendar-month span{\r\n        padding: 0.25rem;\r\n        transition: 100ms ease-in-out;\r\n        &:hover {\r\n            color: white;\r\n            background-color: darkgray;\r\n            cursor: pointer;\r\n            border-radius: 5px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default YearTable;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst CalendarSettings = (props) => {\r\n    const { monthHeading, changeViewMode, currentYear, toggleMonthPicker, toggleYearPicker } = props;\r\n    return (\r\n        <Settings>\r\n            <div className=\"section\">\r\n                <h2><span className=\"link\" onClick={() => toggleMonthPicker()}>{monthHeading}</span> ∙ <span className=\"link\" onClick={() => toggleYearPicker()}>{currentYear}</span></h2>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"buttonGrid\">\r\n                    <FontAwesomeIcon className=\"icon\" icon={faBars} onClick={() => changeViewMode(\"single\")}/>\r\n                    <FontAwesomeIcon className=\"icon\" icon={faBars} onClick={() => changeViewMode(\"double\")}/>\r\n                    <FontAwesomeIcon className=\"icon\" icon={faBars} onClick={() => changeViewMode(\"all\")}/>\r\n                </div>\r\n            </div>\r\n        </Settings>\r\n    )\r\n}\r\n\r\nconst Settings = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 500px;\r\n    margin: 0 auto;\r\n    justify-content: space-around;\r\n    .icon {\r\n        cursor: pointer;\r\n    }\r\n    .link {\r\n        cursor: pointer;\r\n    }\r\n    .section {\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .buttonGrid {\r\n        display: flex;\r\n        width: 200px;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport default CalendarSettings;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components';\r\n\r\nconst CalendarNavigation = (props) => {\r\n    const { nextMonth, prevMonth } = props;\r\n    return (\r\n        <Navigation>\r\n            <FontAwesomeIcon icon={faArrowLeft} className=\"icon\" onClick={() => prevMonth()}/>\r\n            <button className=\"icon\">Select Month</button>\r\n            <FontAwesomeIcon icon={faArrowRight} className=\"icon\" onClick={() => nextMonth()}/>\r\n\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nconst Navigation = styled.div`\r\n    width: 500px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    .icon {\r\n        margin: 0 1rem;\r\n    }\r\n`;\r\n\r\nexport default CalendarNavigation;\r\n","import React, { useState } from 'react';\r\nimport PageContainer from '../components/PageContainer';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport MonthTable from '../components/calendar/MonthTable';\r\nimport YearTable from '../components/calendar/YearTable'\r\nimport CalendarSettings from '../components/calendar/CalendarSettings';\r\nimport CalendarNavigation from '../components/calendar/CalendarNavigation';\r\n\r\nconst CalendarPage = () => {\r\n    const weekdayShort = moment.weekdaysShort();\r\n    const [ dateObject, setDateObject ] = useState(moment());\r\n    const [ allMonths, setAllMonths ] = useState(moment.monthsShort());\r\n    const [ showYearPicker, setShowYearPicker ] = useState(false);\r\n    const [ showMonthPicker, setShowMonthPicker ] = useState(false);\r\n    const currentMonth = parseInt(dateObject.format(\"M\"));\r\n    const firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\r\n    const [ currentYear, setCurrentYear ] = useState(dateObject.format(\"Y\"))\r\n    const currentDay = dateObject.format(\"D\");\r\n    const [ viewMode, setViewMode ] = useState(\"single\");\r\n    let blanks = [];\r\n    for (let i = 0; i < firstDay; i++) {\r\n        blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>)\r\n    }\r\n    let daysInMonth = [];\r\n    for (let d = 1; d <= dateObject.daysInMonth(); d++) {\r\n        let today = d == currentDay && currentMonth == moment().format(\"M\") ? \"today\" : \"\"\r\n        daysInMonth.push(<td className={`calendar-day ${today}`} key={d}>{d}</td>)\r\n    }\r\n    const totalSlots = [...blanks, ...daysInMonth];\r\n    let rows = [];\r\n    let cells = [];\r\n    totalSlots.forEach((row, i) => {\r\n        if (i % 7 !== 0) {\r\n            cells.push(row)\r\n        } else {\r\n            rows.push(cells);\r\n            cells = [];\r\n            cells.push(row);\r\n        }\r\n        if (i === totalSlots.length - 1) {\r\n            rows.push(cells);\r\n        }\r\n    })\r\n    const changeViewMode = (mode) => {\r\n        setViewMode(mode);\r\n    }\r\n    const setYear = (year) => setCurrentYear(year);\r\n    const getMonthHeading = () => {\r\n        if(viewMode === \"single\") {\r\n            return moment().set('month', parseInt(currentMonth - 1)).format(\"MMMM\");\r\n        } else if(viewMode === \"double\") {\r\n            const thisMonth = moment().set('month', parseInt(currentMonth - 1)).format(\"MMMM\");\r\n            const nextMonth = moment().set('month', parseInt(currentMonth === 12 ? 0 : currentMonth)).format(\"MMMM\");\r\n            return `${thisMonth} & ${nextMonth}`;\r\n        } else if (viewMode === \"all\") {\r\n            return \"All Months\"\r\n        }\r\n    }\r\n    const toggleYearPicker = () => { \r\n        setShowMonthPicker(false);\r\n        setShowYearPicker(!showYearPicker);\r\n    };\r\n    const toggleMonthPicker = () => {\r\n        setShowYearPicker(false);\r\n        setShowMonthPicker(!showMonthPicker);\r\n    };\r\n    const setCurrentMonth = month => {\r\n        let date = Object.assign({}, dateObject);\r\n        date = moment(dateObject).set(\"month\", month - 1); // change month value\r\n        setDateObject(date);\r\n      };\r\n    console.log(dateObject)\r\n    const nextMonth = () => setCurrentMonth(currentMonth === 11 ? 0 : currentMonth + 1);\r\n    const prevMonth = () => setCurrentMonth(currentMonth === 0 ? 11 : currentMonth - 1);\r\n    return (\r\n        <PageContainer background=\"green\">\r\n            <h1>Calendar</h1>\r\n            <CalendarSettings toggleMonthPicker={toggleMonthPicker} toggleYearPicker={toggleYearPicker} currentYear={currentYear} changeViewMode={changeViewMode} monthHeading={getMonthHeading()} />\r\n            <CalendarNavigation currentMonth={currentMonth} nextMonth={nextMonth} prevMonth={prevMonth}/>\r\n            { showYearPicker && <YearTable currentYear={currentYear} setYear={setYear} /> }\r\n            { showMonthPicker && <MonthTable allMonths={allMonths} setMonth={setCurrentMonth} /> }\r\n\r\n            { viewMode === \"single\" && <Calendar>\r\n                <table>\r\n                    <tbody>\r\n                    <tr className=\"daysWeek-header\">\r\n                        {weekdayShort.map(day => {\r\n                            return (\r\n                                <th className=\"days\">{day}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                        {\r\n                            rows.map((d, i) => {\r\n                                return (\r\n                                    <tr>{d}</tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </Calendar>\r\n            }\r\n            {   viewMode === 'double' && <DoubleCalendar>\r\n            <table>\r\n                    <tbody>\r\n                    <tr className=\"daysWeek-header\">\r\n                        {weekdayShort.map(day => {\r\n                            return (\r\n                                <th className=\"days\">{day}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                        {\r\n                            rows.map((d, i) => {\r\n                                return (\r\n                                    <tr>{d}</tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <table>\r\n                    <tbody>\r\n                    <tr className=\"daysWeek-header\">\r\n                        {weekdayShort.map(day => {\r\n                            return (\r\n                                <th className=\"days\">{day}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                        {\r\n                            rows.map((d, i) => {\r\n                                return (\r\n                                    <tr>{d}</tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </DoubleCalendar>\r\n\r\n            }\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nconst Calendar = styled.div`\r\n    width: 500px;\r\n    margin: 0 auto;\r\n    background-color: white;\r\n    table {\r\n        width: 100%;\r\n        table-layout: fixed ;\r\n\r\n    }\r\n    .calendar-day {\r\n        color: darkgray;\r\n        text-align: center;\r\n        height: 25px;\r\n        width: 25px;\r\n    }\r\n    .today {\r\n        color: white;\r\n        background-color: darkgray;\r\n        height: 25px;\r\n        width: 25px;\r\n    }\r\n    .daysWeek-header {\r\n        width: 100%;\r\n        background-color: darkgray;\r\n\r\n    }\r\n    \r\n`;\r\n\r\nconst DoubleCalendar = styled.div`\r\n    width: 500px;\r\n    height: 500px;\r\n    margin: 0 auto;\r\n    background-color: white;\r\n    table {\r\n        width: 50%;\r\n        table-layout: fixed ;\r\n\r\n    }\r\n    .calendar-day {\r\n        color: darkgray;\r\n        text-align: center;\r\n        height: 25px;\r\n        width: 25px;\r\n    }\r\n    .today {\r\n        color: white;\r\n        background-color: darkgray;\r\n        height: 25px;\r\n        width: 25px;\r\n    }\r\n    .daysWeek-header {\r\n        width: 100%;\r\n        background-color: darkgray;\r\n\r\n    }\r\n`;\r\n\r\nexport default CalendarPage;\r\n","import React from 'react';\r\nimport ButtonPage from '../pages/ButtonPage';\r\nimport CardsPage from '../pages/CardsPage';\r\nimport HomePage from '../pages/HomePage';\r\nimport CalendarPage from '../pages/CalendarPage';\r\nimport {\r\n    TransitionGroup,\r\n    CSSTransition\r\n  } from \"react-transition-group\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useLocation\r\n  } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationApp = () => {\r\n    let location = useLocation();\r\n\r\n    return (\r\n        <AnimationStyles>\r\n            <TransitionGroup>\r\n                <CSSTransition\r\n                    key={location.key}\r\n                    classNames=\"fade\"\r\n                    timeout={300}\r\n                    >\r\n                    <Switch location={location}>\r\n                        <Route path=\"/buttons\">\r\n                            <ButtonPage />\r\n                        </Route>\r\n                        <Route path=\"/cards\">\r\n                            <CardsPage />\r\n                        </Route>\r\n                        <Route path=\"/calendar\">\r\n                            <CalendarPage />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <HomePage />\r\n                        </Route>\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </AnimationStyles>\r\n    )\r\n}\r\n\r\nconst AnimationStyles = styled.div`\r\n    .fade-enter {\r\n        opacity: 0;\r\n        z-index: 1;\r\n        overflow: hidden;\r\n        }\r\n\r\n        .fade-enter.fade-enter-active {\r\n        opacity: 1;\r\n        transition: 300ms ease-in;\r\n        overflow: hidden;\r\n        }\r\n`;\r\n\r\nexport default AnimationApp;\r\n","import React, { useState, useRef } from 'react';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components';\r\nimport useOutsideClick from '../hooks/UseClickOutside';\r\n\r\nconst SideNavigation = () => {\r\n    const [ expandNav, setExpandNav ] = useState(false);\r\n    const toggleNav = () => setExpandNav(!expandNav);\r\n    const closeNav = () => setExpandNav(false);\r\n    const ref = useRef();\r\n    useOutsideClick(ref, () => {\r\n        closeNav();\r\n    });\r\n    return (\r\n        <Header>\r\n\r\n        <Nav ref={ref}>\r\n            <div className=\"icon-holder\">\r\n                <FontAwesomeIcon className=\"icon\" icon={faBars} onClick={toggleNav}/>\r\n            </div>\r\n           <CSSTransition\r\n            in={expandNav}\r\n            timeout={300}\r\n            classNames=\"visible\"\r\n            unmountOnExit\r\n            >\r\n                <div>\r\n                    <ul>\r\n                        <NavLink activeClassName=\"selected\" exact to=\"/\">\r\n                            <li className=\"sidebar-link\" onClick={closeNav}>Home</li>\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"selected\" to=\"/buttons\">\r\n                            <li className=\"sidebar-link\" onClick={closeNav}>Buttons</li>\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"selected\" to=\"/cards\">\r\n                            <li className=\"sidebar-link\" onClick={closeNav}>Cards</li>\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"selected\" to=\"/calendar\">\r\n                            <li className=\"sidebar-link\" onClick={closeNav}>Calendar</li>\r\n                        </NavLink>\r\n                    </ul>\r\n                </div>\r\n\r\n           </CSSTransition>\r\n        </Nav>\r\n        </Header>\r\n    )\r\n}\r\n\r\nconst Header = styled.header`\r\n    width: 100%;\r\n    height: 30px;\r\n    align-items: center;\r\n    z-index: 110;\r\n    position: absolute;\r\n    top: 0;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n    z-index: 100;\r\n    position: absolute;\r\n    background-color: white;\r\n    margin: 0;\r\n    transform: translate(0);\r\n    border-radius: 0px 0px 10px 0px;\r\n    .selected {\r\n        background-color: gray;\r\n        color: white;\r\n        width: 100%;\r\n        height: 100%;\r\n        outline: none;\r\n        li {\r\n            background-color: gray;\r\n        }\r\n    }\r\n    .icon-holder {\r\n        height: 30px;\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 0rem 2rem;\r\n    }\r\n    .icon {\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    ul {\r\n        list-style-type: none;\r\n        padding: 0.5rem 1rem 1rem 1rem;\r\n        margin: 0;\r\n        a {\r\n            text-decoration: none;\r\n            transition: 200ms ease-in;\r\n            color: black;\r\n        }\r\n        li {\r\n            border-bottom: solid gray 1px;\r\n            width: 100px;\r\n            padding: 0.5rem;\r\n            transition: 200ms ease-in;\r\n            :hover {\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n            \r\n        }\r\n    }\r\n    .visible-enter {\r\n        transform: translate(-100%);\r\n        z-index: 100;\r\n        position: absolute;\r\n        background-color: white;\r\n        margin: 0;\r\n        border-radius: 0px 0px 10px 0px;\r\n\r\n    }\r\n    .visible-enter-active {\r\n        transform: translate(0);\r\n        transition: 300ms linear;\r\n        z-index: 100;\r\n        position: absolute;\r\n        background-color: white;\r\n        margin: 0;\r\n        border-radius: 0px 0px 10px 0px;\r\n\r\n\r\n    }\r\n    .visible-exit {\r\n        transform: translate(0);\r\n        z-index: 100;\r\n        position: absolute;\r\n        background-color: white;\r\n        margin: 0;\r\n        border-radius: 0px 0px 10px 0px;\r\n\r\n    }\r\n    .visible-exit-active {\r\n        transform: translate(-100%);\r\n        transition: 300ms linear;\r\n        z-index: 100;\r\n        position: absolute;\r\n        background-color: white;\r\n        margin: 0;\r\n        border-radius: 0px 0px 10px 0px;\r\n\r\n    }\r\n`;\r\n\r\nexport default SideNavigation;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    table, caption, tbody, tfoot, thead, tr, th, td,\r\n    article, aside, canvas, details, embed, \r\n    figure, figcaption, footer, header, hgroup, \r\n    menu, nav, output, ruby, section, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 100%;\r\n        font: inherit;\r\n        vertical-align: baseline;\r\n    }\r\n    /* HTML5 display-role reset for older browsers */\r\n    article, aside, details, figcaption, figure, \r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n    body {\r\n        line-height: 1;\r\n    }\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n    table {\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n    }\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n    *, *:before, *:after {\r\n    box-sizing: inherit;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import './App.css';\nimport HomePage from './pages/HomePage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Navigation from './components/Navigation';\nimport AnimationApp from './components/AnimationApp';\nimport SideNavigation from './components/SideNavigation';\nimport GlobalStyle from './styles/GlobalStyle';\n\nfunction App() {\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Router>\n        <SideNavigation />\n        <Switch>\n          <Route path=\"*\">\n            <AnimationApp />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}